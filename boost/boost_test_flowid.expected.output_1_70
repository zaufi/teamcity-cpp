##teamcity[testSuiteStarted name='Master Test Suite' flowId='myFlowId']
##teamcity[testSuiteStarted name='my_suite1' flowId='myFlowId']
##teamcity[testStarted name='my_test1' flowId='myFlowId']
##teamcity[testFailed name='my_test1' message='failed' details='boost/boost_test.cpp:23: check 2 == 1 has failed|n' flowId='myFlowId']
##teamcity[testFinished name='my_test1' flowId='myFlowId' duration='0']
##teamcity[testStarted name='my_test2' flowId='myFlowId']
##teamcity[testFailed name='my_test2' message='failed' details='boost/boost_test.cpp:30: check i == 2 has failed [0 != 2|]|n' flowId='myFlowId']
##teamcity[testFinished name='my_test2' flowId='myFlowId' duration='0']
##teamcity[testSuiteFinished name='my_suite1' flowId='myFlowId']
##teamcity[testStarted name='my_test3' flowId='myFlowId']
##teamcity[testFinished name='my_test3' flowId='myFlowId' duration='0']
##teamcity[testSuiteStarted name='my_suite2' flowId='myFlowId']
##teamcity[testStarted name='my_test4' flowId='myFlowId']
##teamcity[testFailed name='my_test4' message='failed' details='boost/boost_test.cpp:49: check i == 1 has failed [0 != 1|]|n' flowId='myFlowId']
##teamcity[testFinished name='my_test4' flowId='myFlowId' duration='0']
##teamcity[testSuiteStarted name='internal_suite' flowId='myFlowId']
##teamcity[testStarted name='my_test5' flowId='myFlowId']
##teamcity[testFailed name='my_test5' message='failed' details='boost/boost_test.cpp:58: check i == 1 has failed [0 != 1|]|n' flowId='myFlowId']
##teamcity[testFinished name='my_test5' flowId='myFlowId' duration='0']
##teamcity[testSuiteFinished name='internal_suite' flowId='myFlowId']
##teamcity[testSuiteFinished name='my_suite2' flowId='myFlowId']
##teamcity[testStarted name='testCerr' flowId='myFlowId']
##teamcity[testFinished name='testCerr' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testCout' flowId='myFlowId']
Hello from cout
##teamcity[testFinished name='testCout' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testException' flowId='myFlowId']
##teamcity[testFailed name='testException' message='aborted' details='unknown location: std::runtime_error: runtime exception text (C++ exception error)|nLast checkpoint at boost/boost_test.cpp:84: "testException" test entry' flowId='myFlowId']
##teamcity[testFinished name='testException' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testAssertExceptionGood' flowId='myFlowId']
##teamcity[testFinished name='testAssertExceptionGood' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testAssertExceptionFail' flowId='myFlowId']
##teamcity[testFailed name='testAssertExceptionFail' message='aborted' details='unknown location: std::runtime_error: runtime exception text (C++ exception error)|nLast checkpoint at boost/boost_test.cpp:96' flowId='myFlowId']
##teamcity[testFinished name='testAssertExceptionFail' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testFatal' flowId='myFlowId']
##teamcity[testFailed name='testFatal' message='aborted' details='boost/boost_test.cpp:101: bfail|n' flowId='myFlowId']
##teamcity[testFinished name='testFatal' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testError' flowId='myFlowId']
##teamcity[testFailed name='testError' message='failed' details='boost/boost_test.cpp:106: berror|n' flowId='myFlowId']
##teamcity[testFinished name='testError' flowId='myFlowId' duration='0']
##teamcity[testStarted name='testNothing' flowId='myFlowId']
##teamcity[testFinished name='testNothing' flowId='myFlowId' duration='0']
##teamcity[testStarted name='skip_this_test' flowId='myFlowId']
##teamcity[testIgnored name='skip_this_test' message='This test is ignored' flowId='myFlowId']
##teamcity[testFinished name='skip_this_test' flowId='myFlowId' duration='0']
##teamcity[testSuiteStarted name='test_case_arity1' flowId='myFlowId']
##teamcity[testStarted name='_0' flowId='myFlowId']
##teamcity[testFailed name='_0' message='failed' details='boost/boost_test.cpp:128: check (var <= 4 && var >= 1) has failed|n' flowId='myFlowId']
##teamcity[testStdErr name='_0' out='Failure has occurred in a following context:|nvar = 0; ' flowId='myFlowId']
##teamcity[testFinished name='_0' flowId='myFlowId' duration='0']
##teamcity[testStarted name='_1' flowId='myFlowId']
##teamcity[testFinished name='_1' flowId='myFlowId' duration='0']
##teamcity[testStarted name='_2' flowId='myFlowId']
##teamcity[testFinished name='_2' flowId='myFlowId' duration='0']
##teamcity[testStarted name='_3' flowId='myFlowId']
##teamcity[testFinished name='_3' flowId='myFlowId' duration='0']
##teamcity[testStarted name='_4' flowId='myFlowId']
##teamcity[testFinished name='_4' flowId='myFlowId' duration='0']
##teamcity[testSuiteFinished name='test_case_arity1' flowId='myFlowId']
##teamcity[testStarted name='checkpointTest' flowId='myFlowId']
##teamcity[testFailed name='checkpointTest' message='aborted' details='boost/boost_test.cpp:152: check 1 != 1 has failed [1 == 1|]|nunknown location: std::runtime_error: Undefined Behaviour ahead! (C++ exception error)|nLast checkpoint at boost/boost_test.cpp:152' flowId='myFlowId']
##teamcity[testFinished name='checkpointTest' flowId='myFlowId' duration='0']
##teamcity[testStarted name='contextsTest' flowId='myFlowId']
##teamcity[testFailed name='contextsTest' message='failed' details='boost/boost_test.cpp:159: Intentionally failed test|nboost/boost_test.cpp:163: check 1 != 1 has failed [1 == 1|]|nboost/boost_test.cpp:166: check 3 != 3 has failed [3 == 3|]|nboost/boost_test.cpp:171: check 5 != 5 has failed [5 == 5|]|n' flowId='myFlowId']
##teamcity[testStdErr name='contextsTest' out='Failure has occurred in a following context:|nAlpha|nBeta' flowId='myFlowId']
##teamcity[testFinished name='contextsTest' flowId='myFlowId' duration='0']
##teamcity[testIgnored name='dependencyFailTest' message='dependency test case "my_suite1/my_test1" has failed' flowId='myFlowId']
##teamcity[testStarted name='dependencySkippedTest' flowId='myFlowId']
##teamcity[testFailed name='dependencySkippedTest' message='failed' details='boost/boost_test.cpp:138: check 1 != 1 has failed [1 == 1|]|n' flowId='myFlowId']
##teamcity[testFinished name='dependencySkippedTest' flowId='myFlowId' duration='0']
##teamcity[testStarted name='dependencyOkTest' flowId='myFlowId']
##teamcity[testFinished name='dependencyOkTest' flowId='myFlowId' duration='0']
##teamcity[testSuiteFinished name='Master Test Suite' flowId='myFlowId']
