cmake_minimum_required(VERSION 3.6)

cmake_policy(SET CMP0048 NEW)

# ATTENTION Change this version on release
# TODO Get it via git?
project(teamcity-cpp VERSION 1.8 LANGUAGES CXX)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

set(ENABLE_BOOST "AUTO" CACHE STRING "Enable boost support (default auto)")
set(ENABLE_GTEST "AUTO" CACHE STRING "Enable GTest support (default auto)")
set(ENABLE_CPPUNIT "AUTO" CACHE STRING "Enable CppUnit support (default auto)")

# Find supported testing libs
# - boost UTF
if(ENABLE_BOOST OR ENABLE_BOOST STREQUAL "AUTO")
    find_package(Boost COMPONENTS unit_test_framework)
    if(Boost_FOUND)
        set(HAVE_BOOST ON)
    else()
        set(HAVE_BOOST OFF)
        if(ENABLE_BOOST AND NOT ENABLE_BOOST STREQUAL "AUTO")
            message(SEND_ERROR "Boost support has requested, but library was not found")
        endif()
    endif()
endif()
# Google test
if(ENABLE_GTEST OR ENABLE_GTEST STREQUAL "AUTO")
    find_package(GTest)
    if(GTEST_FOUND)
        set(HAVE_GTEST ON)
    else()
        set(HAVE_GTEST OFF)
        if(ENABLE_GTEST AND NOT ENABLE_GTEST STREQUAL "AUTO")
            message(SEND_ERROR "GTest support has requested, but library was not found")
        endif()
    endif()
endif()
# Cpp Unit
if(ENABLE_CPPUNIT OR ENABLE_CPPUNIT STREQUAL "AUTO")
    find_package(CppUnit)
    if(CPPUNIT_FOUND)
        set(HAVE_CPPUNIT ON)
    else()
        set(HAVE_CPPUNIT OFF)
        if(ENABLE_CPPUNIT AND NOT ENABLE_CPPUNIT STREQUAL "AUTO")
            message(SEND_ERROR "CppUnit support has requested, but library was not found")
        endif()
    endif()
endif()
find_package(Threads)

include(CMakePackageConfigHelpers)
include(RenderTestRunner)
include(CTest)
enable_testing()

include_directories(common)

if(WIN32)
    set(CPACK_GENERATOR ZIP)
else()
    set(CPACK_GENERATOR TBZ2)
endif()
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_ARCHIVE_COMPONENT_INSTALL ON)
set(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${PROJECT_VERSION}")
set(CPACK_INSTALL_PREFIX "")
include(CPack)

add_subdirectory(common)
if(HAVE_BOOST)
    add_subdirectory(boost)
endif()
if(HAVE_GTEST)
    add_subdirectory(gtest)
endif()
if(HAVE_CPPUNIT)
    add_subdirectory(cppunit)
endif()
